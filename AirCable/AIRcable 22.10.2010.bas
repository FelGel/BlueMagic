@ERASE

0 REM BlueSpells Scanner Version 0.1

@INIT 1
0 REM LOAD PARAMETERS
0 REM WILL OVERRIDE DEFAULT VALUES
1 A = load "params.cfg"
0 REM Set LED on
2 A = pioset 20
0 REM Baud rate for serial line
3 A = baud 1152
0 REM SENSOR_ID
4 N = 0
0 REM IS ROOT
5 M = 0
0 REM IS_DISCOVERABLE 
6 D = 0
0 REM VERSION
7 V = 1
0 REM INITIALIZED
8 I = 0
0 REM STATUS
10 S = 0
0 REM Debug toggle
12 Z = 1
0 REM power for scanning in dBm
0 REM A = defpower 10
13 A = exist "found.log"
14 IF A = 0 THEN 16
15 F = delete "found.log"
16 F = open "found.log"
17 $0 = "\0"
18 F = write 0
19 F = close
20 A = zerocnt
21 STTYS 2
22 RETURN


400 RESERVED
0 REM SLAVE ADDRESS
500 
501 0025BF100308
502 0025BF100359
503 0025BF100357
510 001E377281F0

@IDLE 30
30 REM A = slave 0
31 PRINTU "\n\rIDLE\n\r"
33 A = pioclr 20
40 C = 1000
41 S = 0
48 ALARM 1
49 RETURN

@ALARM 50
50 GOSUB 800
51 IF E <> 0 THEN 60
52 A = pioset 20
0 REM RUN INQUIRY
53 GOSUB 370
54 IF D > 10 THEN 58
55 A = slave 20
56 D = D + 1
57 GOTO 98
58 A = slave -20
0 REM S = 0
59 GOTO 98
60 A = pioclr 20
61 IF S <> 0 THEN 69
62 IF I <> 0 THEN 66
0 REM INPUT HANDLER
63 W = 2
64 GOSUB 550
65 GOTO 98
0 REM SEND INQUIRY DATA
66 GOSUB 950
0 REM  CONNECT TO MASTER AND WAIT
67 GOSUB 970
68 S = 1
69 IF M = 0 THEN 92
0 REM INPUT HANDLER
70 W = 1
71 GOSUB 550
72 IF $300[0] = 115 THEN 100
73 IF C <> 5 THEN 77
0 REM SEND KEEP_ALIVE
76 GOSUB 780
77 IF E = 1 THEN 84
78 REM $0[0] = 0
79 REM TIMEOUTM 1
80 REM INPUTM $0
81 REM IF $0[0] = 0 THEN 84
82 REM PRINTS $0
83 REM PRINTS "\n\r"
84 REM GOTO 200
0 REM RUN INQUIRY
85 GOSUB 370
86 IF C <> 6 THEN 98
0 REM CONNECT TO MASTER AND WAIT
87 GOSUB 970
90 GOTO 98
92 GOSUB 800
93 IF E = 0 THEN 98 
95 A = disconnect 0
98 ALARM 1
99 RETURN

100 PRINTS "\n\rTERMINATED\n\r"
101 PRINTS "\n\rPress 'r' "
102 PRINTS "to reboot\n\r"
103 PRINTS "\n\rPress 'd' "
104 PRINTS "to disconnect\n\r"
105 PRINTS "\n\rPress any "
106 PRINTS "other key "
107 PRINTS "to resume\n\r"
108 $300[0] = 0
109 GOSUB 800
110 IF E <> 0 THEN 113
111 ALARM 1
112 RETURN
113 TIMEOUTS 1
114 INPUTS $300
119 IF $300[0] = 0 THEN 109;

120 PRINTS $300;
121 PRINTS "\n\r"
122 IF $300[0] = 114 THEN 190
123 IF $300[0] = 100 THEN 150
125 M = 0
130 PRINTS "\n\rRESUMING\n\r"
135 GOTO 196
150 A = getaddr
155 PRINTS $0
160 PRINTS "  "
165 PRINTS "DISCONNECTING\n\r"
170 A = disconnect 0
175 WAIT 5
180 GOTO 196
190 PRINTS "REBOOTING\n\r"
191 A = disconnect 1
192 A = disconnect 0
195 A = reboot
196 ALARM 2
197 RETURN


0 REM DONGLES TOGGLE 
200 IF C < 13 THEN 224
204 A = unlink 3
205 A =  disconnect 1
206 REM WAIT 1
207 TIMEOUTM 1
210 INPUTM $0
220 C = 0
222 A = inquiry -10
224 C = C + 1
235 IF C <> 5 THEN 240
237 $300 = $502
238 GOSUB 280
240 REM IF C <> 16 THEN 279
241 REM A =  disconnect 1
243 REM WAIT 1
252 REM $300 = $501
255 REM GOSUB 280
279 GOTO 98

0 REM CONNECT to MASTER
280 A = cancel
283 B = readcnt
284 B = B + 20 
285 A = master $500
286 WAIT 5
288 A = readcnt
290 IF A > B THEN 299
291 GOSUB 800
297 IF E = 1 THEN 285
298 A = link 3
299 RETURN


0 REM PRINT found.log
320 A = exist "found.log"
323 IF A = 0 THEN 369
324 $0[0] = 0
327 F = open "found.log"
328 O = size
331 B = 32
332 IF O > B THEN 334;
333 B = O;
334 O = O - B;
335 A = read B
336 $0[B] = 0;
337 PRINTS $0;
338 IF O > 0 THEN 332
348 F = close
369 RETURN


0 RUN INQUIRY
370 IF I <> 0 THEN 380
376 GOTO 399
380 IF C < 6 THEN 390
383 C = 0
385 A = inquiry -7
390 C = C + 1
399 RETURN


0 REM INPUT HANDLER
550 TIMEOUTS W
555 INPUTS $300
559 IF $300[0] <> 54 THEN 570
0 REM SEND BTB_INFO
560 GOSUB 750
561 REM PRINTM $300
565 I = 1
570 IF $300[0] <> 109 THEN 599
571 A = disconnect 1
599 RETURN


0 REM BTB_INFO
750 PRINTS "3 "
751 PRINTS N
752 PRINTS " "
753 A = readcnt
754 PRINTS A
755 PRINTS " "
756 PRINTS V
757 PRINTS " "
758 A = getaddr 
759 PRINTS $0
760 PRINTS "\n\r"
779 RETURN


0 REM KEEP_ALIVE
780 PRINTS "0 "
781 PRINTS N
782 PRINTS " "
783 A = readcnt
784 PRINTS A
795 PRINTS "\n\r"
799 RETURN


0 REM CONNECTION STATUS
800 A = status
801 E = 0
802 IF A < 10000 THEN 805
803 A = A - 10000
804 REM E = E + 4
805 IF A < 1000 THEN 810
806 A = A - 1000
810 IF A < 100 THEN 820
815 A = A - 100
820 IF A < 10 THEN 830
823 E = E + 2
825 A = A - 10
830 IF A < 1 THEN 840
835 E = E + 1
840 IF E <> 2 THEN 849
845 A = disconnect 1
846 REM ALARM 1
847 E = 0
849 RETURN 



@INQUIRY 900
900 A = strlen $0;
901 IF A = 21 THEN 904;
902 IF A = 20 THEN 904;
0 REM PRINTS "SIZE ERROR: ";
0 REM PRINTS A;
0 REM PRINTS "\n\r";
903 GOTO 939;
904 A = pioset 20
912 A = pioclr 20;
913 $300 = $0;
914 $0[0] = "1 ";
916 PRINTV N;
917 PRINTV " ";
918 A = readcnt;
919 PRINTV A;
921 $301 = $300[17];
922 PRINTV $301;
923 PRINTV " ";
924 $300[12] = 0;
925 PRINTV $300;
926 PRINTV "\n\r";
927 IF E = 1 THEN 938;
928 B = strlen $0;
929 F = append "found.log";
930 Q = size;
0 REM If file is too large, we just have to let the results go :(
931 IF Q < 4000 THEN 935;
932 F = close;
933 F = delete "found.log";
934 F = append "found.log";
935 F = write B;
936 F = close;
937 GOTO 939;
938 PRINTS $0;
0 REM PRINTS "\r";
939 RETURN



@SLAVE 940
940 ALARM 100
941 A = cancel
942 A = pioclr 20
944 REM WAIT 1
0 REM KEEP_ALIVE
945 GOSUB 780
946 ALARM 1
949 RETURN


0 REM SEND INQUIRY DATA
950 IF I <> 0 THEN 960
0 REM INPUT HANDLER
954 W = 3
955 GOSUB 550
0 REM PRINT FILE found.log
960 GOSUB 320
962 F = delete "found.log"
0 REM INPUT HANDLER
965 W = 1
968 GOSUB 550
969 RETURN


0 REM CONNECT TO MASTER AND WAIT
970 A = strlen $500
972 IF A <> 12 THEN 993
0 REM CONNECT TO MASTER
974 GOSUB 280
0 REM WAIT FOR MASTER TO DISCONNECT
975 B = readcnt
977 B = B + 35
979 GOSUB 800
980 IF E <> 3 THEN 993
982 WAIT 1
985 A = readcnt
987 IF A < B THEN 979
989 A = unlink 3
990 A = disconnect 1
993 C = 1000
994 RETURN


@MASTER 995
995 REM A = unlink 2
996 REM A = link 3
999 RETURN
